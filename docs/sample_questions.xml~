<question_bank>

<entry>
<question>
Which of the following is/are storage class?
</question>
<description>
</description>
<points>1</points>
<neg_points>0.25</neg_points>
<options>
Automatic
Static
Allocated
All of Above
</options>
<right_response>
Static
</right_response>
</entry>

<entry>
<question>
What will the output of following code?
</question>
<description>
int x = 10, y = 15;
x = x++;
y = ++y;
</description>
<points>1</points>
<neg_points>0.25</neg_points>
<options>
10, 15
10, 16
11, 16
11, 15
</options>
<right_response>
11, 16
</right_response>
</entry>


<entry>
<question>
What is the output of the following program?
</question>
<description>
main ( )
{
int x = 2, y = 5;
if (x &lt; y ) return (x = x+y); else printf (“z1”);
printf(“z2”);
}

</description>
<points>1</points>
<neg_points>0.25</neg_points>
<options>
z2
Compilation error
z1z2
None of these
</options>
<right_response>
None of these
</right_response>
</entry>

<entry>
<question>
Choose the correct one
</question>
<description>
</description>
<points>1</points>
<neg_points>0.25</neg_points>
<options>
Address operator can not be applied to register variables
Address operator can be applied to register variables
Use of register declaration will increase the execution time
None of the above
</options>
<right_response>
None of the above
</right_response>
</entry>

<entry>
<question>
What is the following program doing?
</question>
<description>
main ()
{ int d = 1;
do
printf(“%d\n”, d++);
while (d &lt; = 9);}
</description>
<points>1</points>
<neg_points>0.25</neg_points>
<options>
Adding 9 integers
Adding integers from 1 to 9
Displaying integers from 1 to 9
None of these
</options>
<right_response>
Displaying integers from 1 to 9
</right_response>
</entry>


<entry>
<question>
If x is one dimensional array, then pick up the correct answer
</question>
<description>
</description>
<points>1</points>
<neg_points>0.25</neg_points>
<options>
*(x + i) is same as &amp;x[i]
*&amp;x[i] is same as x + i
*(x + i) is same as x[i] +1
*(x + i) is same as *x[i]
</options>
<right_response>
*(x + i) is same as &amp;x[i]
</right_response>
</entry>

<entry>
<question>
What will be the output of the following code segment, if any?
</question>
<description>
myfunc ( struct test t) {
strcpy(t.s, “world”);
}
main( ) {
struct test { char s[10]; } t;
strcpy(t.s, “Hello”);
printf(“%s”, t.s);
myfunc(t);
printf(“%s”, t.s);
}
</description>
<points>1</points>
<neg_points>0.25</neg_points>
<options>
Hello Hello
Hello world
world world
the program will not compile
</options>
<right_response>
the program will not compile
</right_response>
</entry>

<entry>
<question>
main ( ) is an example of
</question>
<description>
</description>
<points>1</points>
<neg_points>0.25</neg_points>
<options>
library function
header
user defined function
statement
</options>
<right_response>
library function
</right_response>
</entry>

<entry>
<question>
What is the output of the following statement:
</question>
<description>
printf (“%-3d”,12345);
</description>
<points>1</points>
<neg_points>0.25</neg_points>
<options>
1 2 3
1 2 3 4 5
-1 2 3
12
</options>
<right_response>
1 2 3 4 5
</right_response>
</entry>


<entry>
<question>
If the variables i, j and k are assigned the values 5,3 and 2 respectively, then the expression i = j + ( k + + = 6 ) + 7
</question>
<description>
</description>
<points>1</points>
<neg_points>0.25</neg_points>
<options>
gives an error message
assigns a value 16 to i
assigns a value 18 to i
assigns a value 19 to i
</options>
<right_response>
gives an error message
</right_response>
</entry>



</question_bank>
